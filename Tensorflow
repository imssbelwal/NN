!pip install tensorflow
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Define the model
model = Sequential([
    Dense(1, input_shape=(1,), activation='sigmoid')  # Single neuron with sigmoid activation
])

# Compile the model
model.compile(optimizer='sgd', loss='binary_crossentropy',
              metrics=['accuracy'])

np.random.seed(0)
X = np.random.rand(100).reshape(-1, 1)  # Shape for input layer
y = np.array([1 if x >= 0.5 else 0 for x in X])  # Label: <0.5 => 0, >=0.5 => 1

# Train the model without epoch output
model.fit(X, y, epochs=10, verbose=0)

# Function to get user input and classify it
def user_input_classification():
    user_input = float(input("Enter a number between 0 and 1: "))  # Expecting valid float input
    if 0 <= user_input <= 1:
        prediction = model.predict(np.array([user_input]))  # Predict with the trained model
        classification = 1 if prediction > 0.5 else 0
        print(f"Perceptron classification: {classification}")
    else:
        print("Please enter a number between 0 and 1.")

# Classify user input
user_input_classification()

